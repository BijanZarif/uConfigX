### http://greenback.gremlin.net/trigfuncs.awk
%%% function pow(a, b) {return a^b}
%%% function abs(x)  { return x<0?x*-1:x}
%%% function asin(x) { return atan2(x, sqrt(abs(1-x*x))) }
%%% function acos(x) { return atan2(sqrt(abs(1-x*x)), x)}
%%% function pi() { return 2*asin(1)}
%%% function todeg(rad) { return rad*360/(2*pi())}
%%% function init() {
%%%
%%%    lunit = 1e-6          # definitions from the code
%%%    tunit = 2.4295e-6
%%%    lrbc  = 1.000000e-06
%%%    trbc  = 3.009441e-03
%%%    ll    = lunit / lrbc
%%%    tt    = tunit / trbc
%%%    kBT_rb = 580 * 250 * pow(ll, -2.0) * pow(tt, 2.0);
%%%
%%%    Nt    = 2*Nv - 4                         # number of triangles
%%%    l0 = sqrt(totArea0 / Nt * 4.0/sqrt(3.0)) # (3.30) in Fedosov2010
%%%    lmax = 2.2*l0                            # page 94 in Fedosov2010
%%%    x0   = l0/lmax
%%%    p = (sqrt(3)*lunit^2 \
%%%            *(16*lunit^3*x0^3-51*lrbc*lunit^2*x0^2+57*lrbc^2*lunit*x0 \
%%%                             -24*lrbc^3)*kBT) \
%%%  /(16*lmax*lrbc^2*mu0*(lunit*x0-lrbc)^3)   # solve (B.5) in Fedosov2010 for `p'
%%%
%%%    cq = (3^(3/2)*l0^4*lunit^4* \
%%%	       (4*l0^2*lunit^2-9*l0*lmax*lrbc*lunit+6*lmax^2*lrbc^2)) \
%%%           /(32*lmax*lrbc^4*(l0*lunit-lmax*lrbc)^2*p)   # from parameters.CTC/RBC/3d/rbc-udevice.mac, similar to (3.4) in Fedosov2010
%%%
%%% }

########## DPD parameters ##########
=numberdensity

=kBT

=gammadpd

=aij

####################
=dt

=hydrostatica

=phi

=Nrbcs

=rotateRBC

########## RBC parameters ##########
=lmax
init()
lmax

=p
init()
p

=cq
init()
cq

=kb

=ka

=kv

=gammaC

=totArea0

=totVolume0

=Nv

=phirbc # spontaneous angle; (3.21) in Fedosov2010
todeg(acos((sqrt(3)*(Nv-2)-5*pi()) / (sqrt(3)*(Nv-2)-3*pi())))
